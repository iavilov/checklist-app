{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","todo","done","react_default","a","createElement","ItemStatusFilter","buttons","name","label","_this$props","this","props","filter","onFilterChange","map","clazz","type","className","concat","key","onClick","Component","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","placeholder","onChange","components_item_status_filter","TodoListItem","onToggleDone","onToggleImportant","classNames","important","onDeleted","TodoList","todos","elements","item","id","itemProps","Object","objectWithoutProperties","components_todo_list_item","assign","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdd","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","addItem","text","newItem","_ref2","_ref3","toggleProperty","_ref4","imoprtant","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.822d2452.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({todo, done}) => {\r\n    return (\r\n        <header>\r\n            <h1>TODO list</h1>\r\n            <p>{todo} more to do, {done} done</p>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ]\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'active' : ''\r\n            return (\r\n                <button\r\n                    type=\"button\"\r\n                    className={`btn btn-outline-primary ${clazz}`}\r\n                    key={name}\r\n                    onClick={() => onFilterChange(name)}>{label}</button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group btn-group-toggle\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    \r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        return (\r\n            <div className=\"search-panel\" >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"type of search\"\r\n                    onChange={this.onSearchChange}\r\n                    value={this.state.term}\r\n                    className=\"form-control\" />\r\n                <ItemStatusFilter \r\n                filter={filter}\r\n                onFilterChange={onFilterChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n        const {\r\n            label,\r\n            onToggleDone,\r\n            onToggleImportant,\r\n            done,\r\n            important } = this.props;\r\n\r\n        let classNames = '';\r\n        if (done) {\r\n            classNames += ' done'\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important'\r\n        }\r\n\r\n        return (\r\n            <div className=\"item-row\">\r\n                <p\r\n                    className={classNames}\r\n                    onClick={onToggleDone}\r\n                >{label}</p>\r\n                <div className=\"item-status-filter\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm\"\r\n                        onClick={this.props.onDeleted}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm\"\r\n                        onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-exclamation\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\r\n\r\n    const elements = todos.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n        return (\r\n            <div key={item.id} className=\"todo-list-row\">\r\n                <TodoListItem\r\n                    {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            {elements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.label)\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n            className=\"item-add-form\"\r\n            onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={this.onLabelChange}\r\n                value={this.state.label}\r\n                placeholder=\"What needsto be done\"/>\r\n                <button className=\"btn btn-info btn-sm\">Add item</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink cofee'),\r\n            this.createTodoItem('Make awesome App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        term: '',\r\n        filter: 'all' //active, all, done\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            imoprtant: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ]\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label\r\n                .toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filter(items, filter) {\r\n\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <div className=\"content\">\r\n                    <AppHeader\r\n                        todo={todoCount}\r\n                        done={doneCount} />\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange}\r\n                        onFilterChange={this.onFilterChange}\r\n                        filter={filter} />\r\n                    <TodoList\r\n                        todos={visibleItems}\r\n                        onDeleted={this.deleteItem}\r\n                        onToggleImportant={this.onToggleImportant}\r\n                        onToggleDone={this.onToggleDone} />\r\n                    <ItemAddForm onAdd={this.addItem} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}